AWSTemplateFormatVersion: 2010-09-09
Description: Create EC2 instance with a security group that allows SSH traffic on port 22 and HTTP traffic on port 80 on Linux Virtual Machine.

Parameters:
  VpcId: 
    Description: VPC id 
    Type: String
    Default: vpc-0abd3e892b3173fef

  SubnetId1:
    Description: Subnet Id where instance will create 
    Type: String
    Default: subnet-0aa61297da4494313

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.micro]
    ConstraintDescription: must be a valid EC2 instance type.

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Resources:
  ConsoleInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref SSMInstanceRole

  SSMInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service:
              - ec2.amazonaws.com
              - ssm.amazonaws.com
      Path: /
      ManagedPolicyArns:
      - !Ref AmazonSSMManagedInstanceCorePolicy 

  AmazonSSMManagedInstanceCorePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - ssm:DescribeAssociation
          - ssm:GetDeployablePatchSnapshotForInstance
          - ssm:GetDocument
          - ssm:DescribeDocument
          - ssm:GetManifest
          - ssm:GetParameter
          - ssm:GetParameters
          - ssm:ListAssociations
          - ssm:ListInstanceAssociations
          - ssm:PutInventory
          - ssm:PutComplianceItems
          - ssm:PutConfigurePackageResult
          - ssm:UpdateAssociationStatus
          - ssm:UpdateInstanceAssociationStatus
          - ssm:UpdateInstanceInformation
          Resource: "*"
        - Effect: Allow
          Action:
          - ssmmessages:CreateControlChannel
          - ssmmessages:CreateDataChannel
          - ssmmessages:OpenControlChannel
          - ssmmessages:OpenDataChannel
          Resource: "*"
        - Effect: Allow
          Action:
          - ec2messages:AcknowledgeMessage
          - ec2messages:DeleteMessage
          - ec2messages:FailMessage
          - ec2messages:GetEndpoint
          - ec2messages:GetMessages
          - ec2messages:SendReply
          Resource: "*"

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Enable SSH access via port 22 and http access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'SSHLocation'
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: '0.0.0.0/0'

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroupIds: 
        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref LatestAmiId
      SubnetId: !Ref SubnetId1
      IamInstanceProfile: !Ref ConsoleInstanceProfile
      UserData:
        Fn::Base64: !Sub
        - |
          #!/bin/bash
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          # Sleep for the instance role might not be properly attached
          sleep 10
          # Install httpd2 for testing 
          rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
          rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
          sudo yum --enablerepo=remi,remi-php71 install httpd php php-common -y
          sudo systemctl start httpd.service
          sudo systemctl enable httpd.service
        - {
          }    

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, AvailabilityZone]
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicDnsName]
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicIp]
